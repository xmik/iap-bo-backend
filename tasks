#!/bin/bash

command="$1"
case "${command}" in
  build)
      rm -rf ./bin/Release/netcoreapp2.1/*
      dotnet publish --configuration=Release --output=./bin/Release/netcoreapp2.1
      exit $?
      ;;
  docker_build)
      rm -rf docker/binaries
      cp -r src/BranchOfficeBackend/bin/Release/netcoreapp2.1 docker/binaries
      cp -r log4net.xml docker/binaries
      cd docker
      docker build -t iap-bo-backend:0.1.0 .
      # run the docker image interactively:
      # docker run -ti -p 8080:8080 iap-bo-backend:0.1.0 -c /bin/bash
      # run the docker image in the background (daemonize):
      # docker run -d -p 8080:8080 iap-bo-backend:0.1.0
      exit $?
      ;;
  up)
      docker-compose -f ./ops/docker-compose.yml -p iap_bo up
      exit $?
      ;;
  down)
      docker-compose -f ./ops/docker-compose.yml -p iap_bo down
      exit $?
      ;;
  utest)
      dotnet test --configuration=Release --no-build ./tests/BranchOfficeBackend.Tests -v=normal
      exit $?
      ;;
  itest)
      bats tests/integration/bats
      exit $?
      ;;
  run)
      dotnet run --project=./src/BranchOfficeBackend/
      exit $?
      ;;
  generate_hq_api_client)
      # this generates HQ API client in C#, but the code is very long and complicated
      dojo -c Dojofile.swagger "nswag run /runtime:NetCore20"
      exit $?
      ;;
  load_test)
      dojo -c Dojofile.py "./tasks _load_test ; cd tests/load ; bash"
      exit $?
      ;;
  _load_test)
      cd tests/load
      sudo pip install -r requirements.txt
      locust -f ./locustfile.py --host=http://bo:8080
      # now visit http://localhost:8089/ in your browser
      exit $?
      ;;
  load_test_notinteractive)
      dojo -c Dojofile.py "./tasks _load_test_notinteractive ; cd tests/load ; bash"
      exit $?
      ;;
  _load_test_notinteractive)
      cd tests/load
      sudo pip install -r requirements.txt
      # --clients == Number of concurrent Locust users
      # --hatch-rate == The rate per second in which clients are spawned
      locust -f ./locustfile.py --host=http://bo:8080 --no-web --clients 10 --hatch-rate 100 --run-time 20s
      # now visit http://localhost:8089/ in your browser
      exit $?
      ;;
  *)
      echo "Invalid command: '${command}'"
      exit 1
      ;;
esac
set +e
